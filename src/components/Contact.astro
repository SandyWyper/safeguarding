<section id="contact" class="py-20 bg-gray-50">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-blue-800 text-center mb-12">
      Need Help or Want to Report a Concern?
    </h2>
    <div class="max-w-2xl mx-auto">
      <form id="contact-form" class="space-y-6" novalidate>
        <div class="grid md:grid-cols-2 gap-6">
          <div>
            <label for="name" class="block text-gray-700 mb-2">Name</label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
            <p class="text-red-500 text-sm mt-1 hidden" id="name-error">
              Please enter your name
            </p>
          </div>
          <div>
            <label for="email" class="block text-gray-700 mb-2">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
            <p class="text-red-500 text-sm mt-1 hidden" id="email-error">
              Please enter a valid email address
            </p>
          </div>
        </div>
        <div>
          <label for="message" class="block text-gray-700 mb-2">Message</label>
          <textarea
            id="message"
            name="message"
            rows="4"
            required
            class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          ></textarea>
          <p class="text-red-500 text-sm mt-1 hidden" id="message-error">
            Please enter your message
          </p>
        </div>
        <div class="text-center">
          <button
            type="submit"
            id="submit-button"
            class="bg-blue-800 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors cursor-pointer"
          >
            Submit
          </button>
          <p
            id="success-message"
            class="text-green-600 mt-4 opacity-0 transform translate-y-4 transition-all duration-300"
          >
            Thanks for getting in touch. We will get back to you as soon as we
            can.
          </p>
        </div>
      </form>
    </div>
  </div>
</section>

<script>
  // Contact form handling
  const contactForm = document.getElementById(
    "contact-form"
  ) as HTMLFormElement;
  const submitButton = document.getElementById(
    "submit-button"
  ) as HTMLButtonElement;
  const successMessage = document.getElementById(
    "success-message"
  ) as HTMLParagraphElement;

  function showError(inputId: string, errorId: string) {
    const input = document.getElementById(inputId) as HTMLInputElement;
    const error = document.getElementById(errorId) as HTMLParagraphElement;
    input.classList.add("border-red-500");
    error.classList.remove("hidden");
  }

  function hideError(inputId: string, errorId: string) {
    const input = document.getElementById(inputId) as HTMLInputElement;
    const error = document.getElementById(errorId) as HTMLParagraphElement;
    input.classList.remove("border-red-500");
    error.classList.add("hidden");
  }

  function validateForm() {
    let isValid = true;
    const name = document.getElementById("name") as HTMLInputElement;
    const email = document.getElementById("email") as HTMLInputElement;
    const message = document.getElementById("message") as HTMLTextAreaElement;

    if (!name.value.trim()) {
      showError("name", "name-error");
      isValid = false;
    } else {
      hideError("name", "name-error");
    }

    if (!email.value.trim() || !email.value.includes("@")) {
      showError("email", "email-error");
      isValid = false;
    } else {
      hideError("email", "email-error");
    }

    if (!message.value.trim()) {
      showError("message", "message-error");
      isValid = false;
    } else {
      hideError("message", "message-error");
    }

    return isValid;
  }

  contactForm?.addEventListener("submit", (e) => {
    e.preventDefault();

    if (validateForm()) {
      // Log form data
      const formData = {
        name: (document.getElementById("name") as HTMLInputElement).value,
        email: (document.getElementById("email") as HTMLInputElement).value,
        message: (document.getElementById("message") as HTMLTextAreaElement)
          .value,
      };
      console.log("Form submitted:", formData);

      // Show success state
      submitButton.textContent = "Success";
      submitButton.classList.remove("bg-blue-800", "hover:bg-blue-700");
      submitButton.classList.add("bg-green-600", "hover:bg-green-700");
      submitButton.disabled = true;

      // Animate success message
      successMessage.classList.remove("opacity-0", "translate-y-4");

      // Clear form
      contactForm.reset();
    }
  });

  // Clear error messages on input
  ["name", "email", "message"].forEach((fieldId) => {
    const input = document.getElementById(fieldId);
    input?.addEventListener("input", () => {
      hideError(fieldId, `${fieldId}-error`);
    });
  });
</script>

