<nav class="fixed top-0 w-full bg-white shadow-md z-50">
  <div class="container mx-auto px-4 py-3 flex justify-between items-center">
    <a href="#" class="flex items-center">
      <img
        src="/src/images/logo.jpeg"
        alt="Safeguarding Logo"
        class="h-14 md:h-18 w-auto mr-2"
      />
    </a>
    <button
      class="hamburger hamburger--collapse lg:!hidden p-0 m-0 z-100"
      type="button"
      aria-label="Menu"
      aria-controls="mobile-menu"
      aria-expanded="false"
    >
      <span class="hamburger-box">
        <span class="hamburger-inner"></span>
      </span>
    </button>
    <div id="desktop-menu" class="hidden lg:flex space-x-6">
      <a href="#what-is" class="text-gray-600 hover:text-blue-800"
        >What is Safeguarding?</a
      >
      <a href="#signs" class="text-gray-600 hover:text-blue-800"
        >Signs to Watch For</a
      >
      <a href="#action" class="text-gray-600 hover:text-blue-800"
        >Action Steps</a
      >
      <a href="#contact" class="text-gray-600 hover:text-blue-800">Contact</a>
    </div>
  </div>
</nav>

<!-- Mobile Menu (Hidden by default) -->
<div
  id="mobile-menu"
  class="fixed top-20 md:top-24 left-0 w-full bg-white shadow-lg transform -translate-y-full transition-transform duration-300 ease-in-out lg:hidden z-40"
>
  <div class="container mx-auto px-4 py-4">
    <div class="flex flex-col space-y-4">
      <a href="#what-is" class="text-gray-600 hover:text-blue-800 py-2"
        >What is Safeguarding?</a
      >
      <a href="#signs" class="text-gray-600 hover:text-blue-800 py-2"
        >Signs to Watch For</a
      >
      <a href="#action" class="text-gray-600 hover:text-blue-800 py-2"
        >Action Steps</a
      >
      <a href="#contact" class="text-gray-600 hover:text-blue-800 py-2"
        >Contact</a
      >
    </div>
  </div>
</div>

<script>
  // Mobile menu functionality
  const hamburger = document.querySelector(
    ".hamburger"
  ) as HTMLButtonElement | null;
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileMenuLinks = mobileMenu?.querySelectorAll("a") || [];
  let isMenuOpen = false;

  function toggleMenu() {
    if (!hamburger || !mobileMenu) return;

    isMenuOpen = !isMenuOpen;
    hamburger.classList.toggle("is-active");
    hamburger.setAttribute("aria-expanded", isMenuOpen.toString());
    mobileMenu.classList.toggle("-translate-y-full");
  }

  // Toggle menu on hamburger click
  hamburger?.addEventListener("click", toggleMenu);

  // Close menu when clicking a link
  mobileMenuLinks.forEach((link) => {
    link.addEventListener("click", () => {
      if (isMenuOpen) {
        toggleMenu();
      }
    });
  });

  // Close menu when clicking outside
  document.addEventListener("click", (e) => {
    const target = e.target as Node;
    if (
      isMenuOpen &&
      hamburger &&
      mobileMenu &&
      !hamburger.contains(target) &&
      !mobileMenu.contains(target)
    ) {
      toggleMenu();
    }
  });
</script>

